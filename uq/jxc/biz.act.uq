/*
uq_build里面自带的 $role_my 获取更多的信息
Biz Query MySites ver 0.4 (
)
RETURNS ret (
    id ID,
) {
    ASSERT ROLE ('Permit.检验', 'Permit.入库.上架');
    INTO ret SELECT a.site as id
        FROM $UserSite as a
        WHERE a.user=$user and a.site=SitePhraseId(ROLE(Permit.入库.上架));
};
*/

Biz ACT SaveAtom (
    atom CHAR(100),
    no NO,
    ex CHAR(200),
)
RETURNS ret (
    id ID,
) {
    VAR base ID = SitePhraseId(atom);

    -- 判断是不是已经有同编号的输入了。比如，我正在输入的时候，别人也输入了。
    VAR id ID = 0;
    SET id = ID(Atom KEY base=base, no=no);
    IF id IS NULL {
        SET id = ID(Atom new KEY base=base,no=no);
        WITH Atom as a ID=id SET a.ex=ex;
    }
    ELSE {
        SET id=-id;
    }
    INTO ret SELECT id;
}

Biz ACT SaveBud(
    phrase CHAR(200),
    id ID,
    int BIGINT,
    dec VALUE,
    str CHAR(100),
) {
    VAR phraseId ID = PhraseId(phrase);
    IF phraseId IS NOT NULL {
        WITH IxBudValue as a IX=id XI=phraseId SET a.int=int, a.dec=dec, a.str=str;
    }
};

Biz Act SaveSpec ver 0.1 (
    spec CHAR(100),
    atom ID,
    values CHAR(300),
)
RETURNS ret (
    id ID,
) {
    VAR id ID;
    SET id = specid(spec, atom, values);
    INTO ret SELECT id;
    VAR a CHAR(300) = specvalue(id);
}

Biz ACT SaveSheet (
    sheet CHAR(100),
    no NO,
    target ID,
    -- operator ID,            -- employee Item
    value VALUE,
)
RETURNS ret (
    id ID,
) {
    VAR base ID = SitePhraseId(sheet);
    VAR me ID = Me();

    VAR sheetId ID;
    WITH Sheet as a ID to sheetId Key(base, no) 
        SET a.target=target, a.operator=me, a.value=value;

    WITH IxMy I=me X=sheetId;

    INTO ret SELECT sheetId as id;
};

Biz ACT SaveDetail (
    base ID,
    id ID,
    item ID,                -- 计量对象。比如：商品不同包装或者批次
    target ID,              -- 操作对象。比如：客户，仓库，等
    origin ID,
    value VALUE,
    v1 VALUE,
    v2 VALUE,
    v3 VALUE,
    pendFrom ID,
    arr props (
        prop PHRASE,
        propValue VALUE,
    ),
) 
RETURNS ret (
    id ID,
) {
    VAR me ID = Me();
    IF base IS NULL OR NOT EXISTS(SELECT x FROM IxMy WHERE i=me AND x=base) {
        -- 如果base sheet没有在我的draft里面，不能写入明细。这是安全保证
        RETURN;
    }
    IF id IS NULL {
        SET id = ID(Detail New);
        WITH Detail ID=id SET base=base, item=item, target=target, origin=origin, value=value, v1=v1, v2=v2, v3=v3;
    }
    ELSE {
        WITH Detail ID=id SET item=item, target=target, origin=origin, value=value, v1=v1, v2=v2, v3=v3;
    }
    IF pendFrom IS NOT NULL {
        WITH DetailPend as a ID=id SET a.pendFrom=pendFrom;
    }
    INTO ret SELECT id;
};

Biz ACT RemoveDraft (
    id ID,
) {
    VAR me ID = Me();
    WITH IxMy I=me X=id DEL;
};

Biz QUERY GetMyDrafts ver 0.1 (
)
PAGE (
    * Sheet DESC,
    phrase CHAR(200),
) {
    VAR me ID = Me();
    -- 获取我正在录入的单据
    PAGE SELECT * b, PhraseOfSiteId(b.base) as phrase
        FROM IxMy as a
            JOIN Sheet as b ON a.x=b.id
        WHERE b.id<$pageStart AND a.i=me
        ORDER BY b.id DESC
        LIMIT $pageSize;
};

Biz Query SearchAtom (
    atom Phrase,
    key CHAR(50),
)
PAGE (
    id ID desc,
    no CHAR(50),
    ex CHAR(50),
    phrase PHRASE,
) {
    VAR base ID = SitePhraseId(atom);

    PAGE SELECT a.id, a.no, a.ex, d.name as phrase
        FROM Atom as a
            JOIN Bud as b ON b.id=a.base
            JOIN $phrase as d ON d.id=b.phrase
        WHERE a.base=base AND a.id<$pageStart AND SEARCH(a.no, a.ex LIKE key)
        ORDER BY a.id desc
        LIMIT $pageSize;
};

Biz Query SearchAtomBuds ver 0.2 (
    phrase Phrase,
    key CHAR(50),
    names CHAR(300),
)
PAGE (
    id ID desc,
    no CHAR(50),
    ex CHAR(50),
    phrase Phrase,
)
RETURNS meds (
    id ID,
    main ID,
    detail ID,
)
RETURNS buds (
    id ID,
    bud ID,
    phrase CHAR(50),
    value CHAR(200),
) {
    PAGE WITH RECURSIVE pPhrase AS (
        SELECT r.id, r.base
        FROM $phrase as r
        WHERE r.name=phrase AND r.valid=1
        UNION
        SELECT a.id, a.base
        FROM $phrase as a JOIN pPhrase AS b
            ON b.id=a.base
    )
    SELECT a.id, a.no, a.ex, d.name as phrase
        FROM Atom as a
            JOIN Bud as b ON b.id=a.base
            JOIN pPhrase as c ON c.id=b.phrase
            JOIN $phrase as d ON d.id=b.phrase
        WHERE a.id<$pageStart AND SEARCH(a.no, a.ex LIKE key) 
            AND b.base=$site
        ORDER BY a.id desc
        LIMIT $pageSize;

    INTO meds SELECT b.id, b.id as main, b.id as detail
        FROM $page as b;
--            JOIN AtomMetric as b ON b.atom=a.id;

    INTO buds SELECT a.id, d.id as bud
        , d.name as phrase
        , IFNULL(b.dec, IFNULL(b.int, b.str)) as value
        FROM $page as a 
            JOIN IxBudValue as b ON b.i=a.id
            -- JOIN SitePhrase as c ON c.id=b.xi
            JOIN $Phrase as d ON d.id=b.x -- phrase
        WHERE LOCATE(d.name, names)>0;
};

Biz Query SearchAtomMetricBuds ver 0.2 (
    phrase Phrase,
    key CHAR(50),
    names CHAR(300),
    -- budType ENUM BudType,
)
PAGE (
    id ID desc,
    no CHAR(50),
    ex CHAR(50),
    phrase Phrase,
)
RETURNS meds (
    id ID,
    main ID,
    detail ID,
)
RETURNS buds (
    id ID,
    bud ID,
    phrase CHAR(50),
    value CHAR(200),
) {
    PAGE WITH RECURSIVE pPhrase AS (
        SELECT r.id, r.base
        FROM $phrase as r
        WHERE r.name=phrase AND r.valid=1
        UNION
        SELECT a.id, a.base
        FROM $phrase as a JOIN pPhrase AS b
            ON b.id=a.base
    )
    SELECT a.id, a.no, a.ex, d.name as phrase
        FROM Atom as a
            JOIN Bud as b ON b.id=a.base
            JOIN pPhrase as c ON c.id=b.phrase
            JOIN $phrase as d ON d.id=b.phrase
        WHERE a.id<$pageStart AND SEARCH(a.no, a.ex LIKE key)
            AND b.base=$site
        ORDER BY a.id desc
        LIMIT $pageSize;

    INTO meds SELECT b.id, b.atom as main, b.metricItem as detail
        FROM $page as a 
            JOIN AtomMetric as b ON b.atom=a.id;

    INTO buds SELECT a.id, d.id as bud
        , d.name as phrase
        , IFNULL(b.dec, IFNULL(b.int, b.str)) as value
        FROM meds as a 
            JOIN IxBudValue as b ON b.i=a.id
            -- JOIN SitePhrase as c ON c.id=b.xi
            JOIN $Phrase as d ON d.id=b.x -- c.phrase
        WHERE LOCATE(d.name, names)>0;
};

Biz Query GetSheet (
    id ID,
    buds CHAR(200),  -- \t separated phrases of the assigns
)
RETURNS main (
    * SHEET,
)
RETURNS details (
    * Detail,
    done VALUE,
    pendFrom ID,
    pendValue VALUE,
    sheet PHRASE,
    no NO,
)
RETURNS origins (
    * Detail,
    done VALUE,
)
RETURNS buds (
    id ID,              -- detail id
    bud ID,
    phrase Phrase,
    int BigINT,
    dec VALUE,
) {
    INTO main SELECT * a
        FROM Sheet as a
        WHERE a.id=id;
    INTO details SELECT * a
        , IFNULL(b.value, 0) as done, c.pendFrom, d.value as pendValue
        , PhraseOfSiteId(e.base) as sheet, e.no
        FROM Detail as a
            LEFT JOIN Done as b ON b.id=a.id
            LEFT JOIN DetailPend as c ON c.id=a.id
            LEFT JOIN Pend as d ON d.id=c.pendFrom
            LEFT JOIN Sheet as e ON e.id=a.base
        WHERE a.base=id;
    INTO origins SELECT DISTINCT * b, IFNULL(c.value, 0) as done
        FROM (SELECT DISTINCT origin FROM details) as a
            JOIN DETAIL as b ON b.id=a.origin
            LEFT JOIN Done as c ON c.id=b.id;
    INTO buds SELECT a.id, b.x as bud, d.name as phrase, b.int, b.dec
        FROM Detail as a
            JOIN IxBudValue as b ON b.i=a.id
            -- JOIN SitePhrase as c ON c.id=b.xi
            JOIN $Phrase as d ON d.id=b.x -- c.phrase
        WHERE a.base=id 
            AND (buds IS NULL OR LOCATE(d.name, buds)>0);
};

Biz Query GetAtom (
    id ID,
)
RETURNS main (
    id ID,
    phrase Phrase,
    no CHAR(50),
    ex CHAR(50),
)
RETURNS buds (
    bud ID,
    phrase CHAR(50),
    value CHAR(200),
) {
    INTO main SELECT a.id, PhraseOfSiteId(a.base) as phrase, a.no, a.ex
        FROM Atom as a
        WHERE a.id=id;

    INTO buds SELECT a.x as bud
        , e.name as phrase
        , IFNULL(a.dec, IFNULL(a.int, a.str)) as value
        FROM IxBudValue as a
            JOIN Atom as b ON b.id=a.i
            JOIN Bud as c ON c.id=b.base
            JOIN $IxPhrase as d ON d.i=c.phrase AND d.x=a.x
            JOIN $Phrase as e ON e.id=a.x
        WHERE a.i=id and d.type=EnumBizType.prop;
};
