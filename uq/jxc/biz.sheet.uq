Biz SHEET Purchase '采购单' {
    detail {
        prop a int;
        prop b dec;
        prop c char;
        Assign done DEC;
    };

    ACT (sheetId ID) {
        -- VAR a INT = 5, receiver ID;
        -- SET receiver = $unit;
        -- 挂StoreIn的待处理队列，可以是主表，也可以是detail
        Biz Pend sheetId ON StoreIn; -- FOR receiver;
        -- Biz State s1 FOR receiver;                     -- 转状态
    };
    STATE s1 {
    }
}

biz act a () {
    TABLE originSheets(id ID);    
    into originSheets select 1 as id;
}

Biz SHEET Sale '销售单' {
    detail;
    ACT (sheetId ID) {
        Biz Pend sheetId ON StoreOut; -- FOR receiver;
    }
}

PROC MayDeletePend(originDetail ID) {
    TABLE originSheets(KEY id ID) NO DROP;
    IF originDetail IS NOT NULL {
        INTO IGNORE originSheets SELECT base as id from Detail WHERE id=originDetail;
    }
    ELSE {
        FOR (VAR id ID OF SELECT id FROM originSheets) {
            VAR s VALUE = (SELECT SUM(case when a.value-b.value<0 then 0 else a.value-b.value end) 
                FROM Detail as a JOIN Done as b ON b.id=a.id WHERE a.base=id);
            IF s=0 {
                WITH IxStateSheet XI=id DEL;
            }
        }
    }
};

Biz SHEET StoreIn ver 0.8 '入库单' {
    detail;
    ACT (sheetId ID) {
        FOR detailId in detail {
            VAR item ID, value VALUE, v1 VALUE, v2 VALUE, origin ID;
            SET item=a.item, value=a.value, v1=a.v1, v2=a.v2, origin=a.origin
                FROM Detail as a
                WHERE a.id=detailId;
            Biz Subject storage of item += value ref detailId;
            WITH Done ID=origin SET value+=value;
            PROC MayDeletePend(origin);
        }
        PROC MayDeletePend(null);
    }
}

Biz SHEET StoreOut ver 0.2 '出库单' {
    detail;
    ACT (sheetId ID) {
        FOR detailId in detail {
            VAR item ID, value VALUE, v1 VALUE, v2 VALUE, origin ID;
            SET item=a.item, value=a.value, v1=a.v1, v2=a.v2, origin=a.origin
                FROM Detail as a
                WHERE a.id=detailId;
            Biz Subject storage of item -= value ref detailId;
            WITH Done ID=origin SET value+=value;
            PROC MayDeletePend(origin);
            /*
            IF value>公司规程.库存上限 {

            }
            ELSEIF value<公司规程.库存下限 {

            }
            */
        }
        PROC MayDeletePend(null);
    }
}

Biz SHEET a ver 0.62 {
    prop a '显示a' int ;
    prop b '显示b' int ;
    prop c '类型' radio (big '大' = 1, 中 = 2, small '小' = 3,);
    detail {
        prop a int;
        prop b int;
    }
    ACT (sheetId ID) {
    }
    state s0 {
        Assign next '下一步' char = 's2';
        ACT ProcStoreIn '入库' (id ID) {
        }
    }
    state s1 '状态s1' {
        ACT (sheetId ID) {
            VAR sheetItem VALUE = 0;
            SET sheetItem = a.item FROM Sheet as a WHERE a.id=sheetId;
            FOR detailId in detail {
                VAR item ID, value VALUE, v1 VALUE, v2 VALUE;
                SET item=a.item, value=a.value, v1=a.v1, v2=a.v2
                    FROM Detail as a JOIN Atom as b ON b.id=a.item
                    WHERE a.id=detailId;
                VAR aInS1 INT = 3;
                SET aInS1 = aInS1 + value;
                VAR ids ID = sheetId;
            }
            Biz State s2;
            -- VAR t ID =3@a.db.b + 3@a.db.b + sheetId@a.a + (3+2)@a.b + 2@b.a + 3@db.b;
        }
    }
    state s2 '状态s2' {
        ACT ProcStoreOut2 (id ID) {
        }
    }

    Assign 流水 '下一步' char = 's2';
};
