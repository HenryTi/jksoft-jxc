-- 后续的业绩计算的数据源。可以不断从这里重复计算
-- 可以清楚汇总表，然后从这里开始，重新计算。
-- 例如：
-- 1. target：销售员，item：商品，subject：个人销售额
-- 2. target：销售员，item：商品，subject：个人毛利润
ID #SumSource (
    id MINUTE,
    bound ID,               -- 绑定对象
    subject ID,             -- 科目，比如，销售额，毛利润，积分点
    value VALUE,
    target ID,              -- bound object subject 主语
    item ID,                -- bound object 宾语
    ref ID,                 -- 凭证
);

ENUM SumFormulaType (
    person = 1,
    group = 2,
)
ID SumFormula ver 0.3 (
    id MINUTE,
    KEY formulaType ENUM SumFormulaType DEFAULT SumFormulaType.person,
    KEY subject ID,                 -- subject of datasource 特定科目
    KEY post ID,                    -- 个人的post phrase
    KEY sumSubject ID,              -- sum subject 比如：提成，毛利润，销售额，积分，组提成，教练提成
    KEY id,                         -- subject-post-sum组可以不断修改。用时间匹配，当前用最新的
    caption CHAR(100),
    start DATE,                     -- 开始时间，null则当下开始
    end DATE,                       -- 结束时间，null则不结束
    ratio VALUE,
);

ID #SubjectBoundPost (
    id,
    KEY bound ID,                   -- bound person
    KEY post ID,                    -- post phrase
    KEY subject ID,                 -- 科目
);

-- 运算过程的参数
Biz Subject Sum {
    Assign pSource INT;
    Assign pSource1 INT;
    Assign startSumMonth INT;       -- 月汇总的开始。之前的月汇总是预置的，之后的月汇总是计算的。
    Prop sales '销售员' Char;
};

-- 1. subject = 个人id @ subject 销售额
-- 2. subject = 个人id @ subject 毛利润
-- 3. subject = group @ subject 销售额
-- 如果汇总月度或年度，i不同。比如，月度销售额，年度销售额，根据月度年度总额，分段计算不同的奖励。
IX IxSumDate (
    i,                              --- SubjectBoundPost
    x Date,
    value VALUE,
);

-- 新增IxSumDate项，就在Quueue中加一项。针对DayQueue计算之后，删去。
-- date 放前面。操作时，逐日顺序操作
ID #SumDayQueue (
    id MINUTE,
    KEY date Date,
    KEY SubjectBoundPost ID SubjectBoundPost,
);

Biz Atom SumGroup '小组合计' {
};

-- person的岗位
-- sumgroup的汇总方式, 也叫post
IX IxPost (
    i,                              -- person atom / sumgroup atom
    x,                              -- post subject / sum post subject
);

-- group下有多少人，每个人的角色
-- group下有多少group，每个group的角色，暂时不考虑
IX IxSumGroup (
    i,                  -- SumGroup atom
    x INDEX,            -- Person atom or SumGroup atom, 建index，所属group
);

IX IxMySum (
    i,                  -- UserSite
    x,                  -- Person or SumGroup
);

QUERY SearchGroupPersons(
    group ID,
    key CHAR(50),
)
PAGE (
    id ID desc,
    no CHAR(50),
    ex CHAR(50),
    phrase PHRASE,
    selected TINYINT,
) {
    VAR person PHRASE = 'atom.person';
    VAR base ID = BudId(person);

    PAGE SELECT a.id, a.no, a.ex, d.name as phrase
        , case when exists(select x from IxSumGroup WHERE i=group AND x=a.id) then 1 else 0 end as selected
        FROM Atom as a
            JOIN Bud as b ON b.id=a.base
            JOIN $phrase as d ON d.id=b.phrase
        WHERE a.base=base AND a.id<$pageStart AND SEARCH(a.no, a.ex LIKE key)
        ORDER BY a.id desc
        LIMIT $pageSize;
}

QUERY GetAllFormula()
RETURNS ret (
    * SumFormula,
) {
    INTO ret 
        SELECT * g
        FROM (SELECT max(a.id) as id
            FROM SumFormula as a
            GROUP BY a.formulaType, a.subject, a.post, a.sumSubject) as f
            JOIN SumFormula as g ON g.id=f.id;

}

ACT SetSumGroupPerson(
    group ID,
    person ID,
    act TINYINT,        -- -1: remove, 1: add 
) {
    IF act=1 {
        WITH IxSumGroup I=group X=person;
    }
    ELSEIF act=-1{
        WITH IxSumGroup I=group X=person DEL;
    }
}

-- Sum.pSource=-1: 则停止计算
-- Sum.pSource=-2: 则彻底全部重新计算
PROC CalcSource ver 0.1 () LOG Error {
    VAR pSource BIGINT, stamp INT, pId BIGINT;
    Biz Bud Sum.pSource of 0 to pSource;
    IF pSource IS NULL {
        SET pSource = 0;
    }
    ELSEIF pSource=-1 {
        RETURN;
    }
    ELSEIF pSource=-2 {
        WITH IxSumDate TRUNCATE;
        WITH SumDayQueue TRUNCATE;
        SET pSource = 0;
    }
    SET stamp=unix_timestamp();
    WHILE 1=1 {
        TRANSACTION START;
        SET pId =a.id
            FROM SumSource as a 
            WHERE a.id>pSource 
            ORDER BY a.id ASC 
            LIMIT 1;

        IF pId IS NOT NULL {
            PROC CalcOneSource(pId);
            Biz Bud Sum.pSource of 0 = pId;
        }
        TRANSACTION COMMIT;
        IF pId IS NULL {
            Break;
        }
        SET pSource=pId;
        IF unix_timestamp() - stamp > 2 {
            SET stamp=unix_timestamp();
            sleep 0.01;
        }
    }
};

PROC CalcOneSource(sourceId ID) {
    VAR site ID = c.base,
        bound ID = a.bound,         -- 绑定对象
        subject ID = a.subject,     -- 科目，比如，销售额，毛利润，积分点
        value VALUE = a.value,
        target ID = a.target,       -- bound object subject 主语
        item ID = a.item,           -- bound object 宾语
        ref ID = a.ref              -- 凭证
        FROM SumSource as a 
            JOIN Atom as b ON b.id=a.bound
            JOIN Bud as c ON c.id=b.base
        WHERE a.id=sourceId;
    FOR (VAR post ID,               -- phrase, 个人的post，或者group phrase
        sumSubject ID,              -- sum subject 比如：提成，毛利润，销售额，积分，组提成，教练提成
        ratio VALUE
        OF SELECT a.post, a.sumSubject, a.ratio
            FROM SumFormula as a 
            WHERE a.formulaType=SumFormulaType.person AND a.subject=subject
            ORDER BY a.id
    ) {
        VAR toValue VALUE = value*ratio;
        VAR subjectBP ID SubjectBoundPost = ID(SubjectBoundPost new KEY bound=bound, post=post, subject=sumSubject);
        VAR timeZone TINYINT = a.timeZone FROM $Site as a WHERE a.id=site;
        VAR date DATE = UMINUTEDATE(sourceId, timeZone);
        WITH IxSumDate I=subjectBP X=date SET value+=toValue;
        WITH SumDayQueue KEY(date as date, subjectBP as subjectBoundPost);
    }
};

PROC CalcGroup() LOG Error {
    LOG 'CalcGroup start';
    VAR today DATE = uminutedate(uminute(), 8);
    LOG CONCAT('CalcGroup today = ', today);
    WHILE 1=1 {
        VAR queueId ID = a.id, date DATE = a.date, subjectBoundPost ID = a.subjectBoundPost 
            FROM SumDayQueue as a
            WHERE a.date<today
            ORDER BY a.date, a.subjectBoundPost
            LIMIT 1;
        LOG CONCAT('CalcGroup date = ', ifnull(date, 'null'), ' subjectBoundPost=', subjectBoundPost);
        IF date IS NULL {
            BREAK;
        }
        VAR site ID = c.base,
            bound ID = a.bound,
            subject ID = a.subject
            FROM SubjectBoundPost as a 
                JOIN Atom as b ON b.id=a.bound
                JOIN Bud as c ON c.id=b.base
            WHERE a.id=subjectBoundPost;
        VAR value VALUE = a.value FROM IxSumDate as a WHERE a.i=subjectBoundPost AND a.x=date;
        FOR (VAR post ID,               -- phrase, 个人的post，或者group phrase
            sumSubject ID,              -- sum subject 比如：提成，毛利润，销售额，积分，组提成，教练提成
            ratio VALUE
            OF SELECT a.post, a.sumSubject, a.ratio
                FROM SumFormula as a 
                WHERE a.formulaType=SumFormulaType.group AND a.subject=subject
                ORDER BY a.id
        ) {
            LOG CONCAT('CalcGroup post = ', post, ' sumSubject=', sumSubject, ' ratio=', ratio);
            VAR groupId VALUE = b.i FROM IxPost as a JOIN IxSumGroup as b ON b.i=a.i WHERE a.x=post AND b.x=bound;
            VAR toValue VALUE = value*ratio;
            VAR subjectBP ID SubjectBoundPost = ID(SubjectBoundPost new KEY bound=groupId, post=post, subject=sumSubject);
            VAR timeZone TINYINT = a.timeZone FROM $Site as a WHERE a.id=site;
            WITH IxSumDate I=subjectBP X=date SET value+=toValue;
        }

        WITH SumDayQueue ID=queueId DEL;
    }
    LOG 'CalcGroup end';
};
