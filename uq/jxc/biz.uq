-- all biz code tables start with biz
-- all biz objects store here

ENUM BizPhraseType (
    any = 0,
    atom = 11,
    spec = 12,
    bud = 13,

    sheet = 101,
    main = 102,
    detail = 103,
    pend = 104,
    detailAct = 111,
    with = 151,
    pick = 161,

    role = 201,
    permit = 202,
    options = 301,
    tree = 401,
    tie = 501,
    title = 901,


    key = 1001,
    prop = 1011,
    optionsitem = 1031,
);

ID #BizPhrase (
    id,
    KEY base ID,                    -- site for object, or owner for bud
    KEY name Phrase,                -- really name, ~ seperated full name, include buds
    type ENUM BizPhraseType,
    memo CHAR(100),
);

ID #BizLang (
    id small,
    KEY lang CHAR(10),
)
+ (id, lang)
VALUES 
(0, ''),
(1, 'en'),
(8, 'zh'),
;

ID #BizCulture (
    id small,
    KEY culture CHAR(10),
)
+ (id, culture)
VALUES 
(0, ''),
(18, 'cn'),
(19, 'tw'),
(78, 'ca'),
(79, 'us'),
;

IX BizResource (
    ixx,
    i,                              -- id
    x,                              -- lang/culture
    res CHAR(100),
);

-- obj x extended from obj i
-- bud i owns bud x
IX IxBizPhrase (
    i,
    x,
);

IDX BizObject (
    id,
    source TEXT,
    schema TEXT,
);

ENUM BudDataType (
    none = 0,
    int = 11,                   -- bigint
    atom = 12,                  -- atom id
    radio = 13,                 -- single radio ids
    check = 14,                 -- multiple checks
    ID = 19,
    dec = 21,                   -- dec(18.6)
    char = 31,                  -- varchar(100)
    str = 32,                   -- varchar(100)
    date = 41,
);

ENUM BizBudFlag (
    index = 1,                  -- 加index
);
IDX BizBud (
    id,
    type ENUM BudDataType,
    obj ID,                     -- BizObject define of atom or options
    flag SMALLINT DEFAULT 0,
);

PROC SaveBizObject ver 0.2 (
    name Phrase,
    caption CHAR(100),
    type ENUM BizPhraseType,
    memo CHAR(100),
    source TEXT,
    schema TEXT,
)
RETURNS ret (
    id ID,
) {
    TRANS START;
    VAR id ID;
    WITH BizPhrase as a 
        ID to id
        KEY($site as base, name) 
        SET a.type=type, a.memo=memo;
    IF caption IS NOT NULL {
        WITH BizResource IXX=id I=0 X=0 SET res=caption;
    }
    WITH BizObject as a ID=id SET a.source=source, a.schema=schema;
    WITH XBiz ID=id;
    -- 所有名下的属性置为无效，重新设置
    -- WITH BizPhrase as a KEY(id as base) SET a.valid=0;
    -- 这类的操作，以后可以优化成一个delete语句，而不用循环
    FOR (VAR budId ID OF SELECT a.id as budId FROM BizPhrase as a WHERE a.base=id) {
        WITH XBiz ID=budId DEL;
    }
    INTO ret SELECT id;
    TRANS COMMIT;
}

-- Biz object on the X is valid
IDX XBiz (
    id,
);

PROC SaveBizBud ver 0.2 (
    base ID,
    name Phrase,
    caption CHAR(100),
    type ENUM BizPhraseType,
    memo CHAR(100),
    dataType ENUM BudDataType,
    objId ID,
    flag SMALLINT,
)
RETURNS ret (
    id ID,
) {
    TRANS START;
    VAR id ID;
    WITH BizPhrase as a 
        ID to id
        KEY(base, name) 
        SET a.type=type, a.memo=memo;
    WITH BizResource IXX=id I=0 X=0 SET res=caption;
    WITH XBiz ID=id;
    WITH BizBud as a ID=id 
        SET a.type=dataType
            , a.obj=objId, a.flag=ifnull(flag, 0);
    INTO ret SELECT id;
    TRANS COMMIT;
};

PROC SaveBizIX (
    pairs JSON,            -- '[[i,x], [i,x], ]'
) {
    JSONTABLE tbl (i PHRASE PATH '$[0]', x PHRASE PATH '$[1]') FROM pairs PATH '$[*]';
    FOR (VAR i PHRASE, x PHRASE OF SELECT a.i, a.x FROM tbl as a) {
        WITH IxBizPhrase I=IFNULL(PhraseId(i), 0) X=PhraseId(x);
    }
};

QUERY GetBizObjects(
    lang CHAR(10),
    culture CHAR(10),
)
RETURNS objs (
    id ID,
    phrase PHRASE,
    source TEXT,
    caption CHAR(100),
)
RETURNS buds (
    id ID,
    base ID,
    phrase PHRASE,
    caption CHAR(100),
)
{
    VAR langCode SMALLINT = IFNULL((SELECT a.id FROM BizLang as a WHERE a.lang=lang), 0);
    VAR cultureCode SMALLINT = IFNULL((SELECT a.id FROM BizCulture as a WHERE a.culture=culture), 0);
    INTO objs SELECT a.id, a.name as phrase, b.source
        , (SELECT r.res
            FROM BizResource AS r
            WHERE r.ixx=a.id AND (r.i=0 AND r.x=0 or r.i=langCode AND r.x=0 or r.i=langCode AND r.x=cultureCode)
            ORDER BY r.i DESC, r.x desc
            LIMIT 1) as caption
        FROM BizPhrase as a 
            JOIN XBiz as a1 ON a1.id=a.id
            LEFT JOIN BizObject as b ON b.id=a.id
        WHERE a.base=$site; -- AND a.valid=1;
    INTO buds SELECT a.id, a.base, a.name as phrase
        , (SELECT r.res
            FROM BizResource AS r
            WHERE r.ixx=a.id AND (r.i=0 AND r.x=0 or r.i=langCode AND r.x=0 or r.i=langCode AND r.x=cultureCode)
            ORDER BY r.i DESC, r.x desc
            LIMIT 1) as caption
        FROM BizPhrase as a
            JOIN XBiz as a1 ON a1.id=a.id
            JOIN objs as b ON b.id=a.base
        WHERE 1=1; -- AND a.valid=1;
}
