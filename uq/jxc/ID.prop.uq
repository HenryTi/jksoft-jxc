-- 实现IX排序和分组
IDX Seq (
    id,
    seq TEXT,               -- id序列，tab分隔，ln分行。排序和分组
);

IX *IxBud (
    i,
    x,
);

IX IxBudValue (
    i,
    x,
    int INT,
    dec DEC(20,6),
    str CHAR(100),
);
/*
IX IxBudDec (
    i,
    x,
    value DEC(20,6),
);

IX IxBudStr (
    i,
    x,
    value CHAR(100),
);
*/
-- 从id基于phrase分裂生长的id。比如特定权限id。仅限经理可以见的客户。ID(unit@permit.经理)/contact
-- IxBud可以表达权限。i=id的权限bud，
ID Bud (
    id,
    base ID,            -- 任何的id，包含unit
    phrase ID,          -- 任意定义的phrase，无unit
);
/*
-- ix=IDType，特定ID有多少属性
-- ix=Prop，特定属性，有多少可选项
-- ix=ID value, 可选项有否
IX *IxProp (
    ix,                 -- ID type or Prop
    xi,                 -- prop
);
IX IxPropValue (
    ix,
    xi,
    int BIGINT,
    dec VALUE,
    str CHAR(100),
);

-- 一个ix，多个选项。比如，usersite的permit
-- usersite可以有多个permit. ix=(usersite@permit), xi=permit id
-- usersite可以有多个role. ix=(usersite@role), xi=role id
-- usersite实际拥有的permit，是通过role和permit merge的结果。ix=(usersite@runningPermit), xi=permit id
IX IxAssign(
    ix,
    xi,
);
-- assign跟prop分开。有可能value和assign需要分开处理。比如系统重置
IX IxAssignValue (
    ix,
    xi,
    int BIGINT,
    dec VALUE,
    str CHAR(100),
);
*/
ID UserSite (
    id,
    KEY user ID,
    KEY site ID,
    INDEX site(site, user) UNIQUE,
);

ID SitePhrase (
    id,
    KEY site ID,            --- site
    KEY phrase ID,          --- phrase id
);

-- Atom 也可以有状态，比如：上线，权限，禁用
IX IxStateAtom (
    ix,                     -- SitePhrase(site, $phrase(item.state))
    xi,                     -- item id
);

IX IxMyDraft (
    ix,                     -- UserSite
    xi INDEX,
);

-- 包括上一环节产生的待处理
IX IxStateSheet (
    ix,                     -- SitePhrase(unit, $phrase(sheet.State))
    xi INDEX,               -- sheet id
);

-- 发送到单据状态，需要base = SheetStatePhrase @ receiver;
ID BindPhraseTo (
    id,
    KEY base ID,            -- (main + type) => owner, or type in main
    KEY to ID,            -- item id easy to load values
);

IDX Balance (
    id,                     -- biz subject
    init VALUE DEFAULT 0,
    value Value,
);

ID History (
    id MINUTE,
    subject ID,         -- 科目
    value Value,
    ref ID,             -- 相关凭证
    INDEX subject_id(subject, id) UNIQUE,
);

-- relation
ID Tie (
    id,
    KEY base ID,                -- site phrase id
    KEY atom ID,                -- atom id
);

IX IxTie (
    ix,                         -- atom pin
    xi,                         -- other atom
);

IX IxTieValue (
    ix,                         -- ID Tie
    xi,                         -- ID Tie, base = Tie phrase + Prop phrase
    value BIGINT,               -- 可以是小数
);

ID Formula (
    id,
    KEY from ID,            -- from subject
    KEY tiePhrase ID,
    KEY to ID,              -- to subject
    radio VALUE,            -- 换算率
);

FUNC SitePhraseId ver 0.1 (
    phrase CHAR(100)
) 
RETURNS ID {
    VAR phraseId ID;
    SET phraseId = (SELECT id FROM $phrase WHERE name=phrase);
    VAR SitePhrase ID = ID(SitePhrase New KEY site=$site, phrase=phraseId);
    return SitePhrase;
};

FUNC PhraseOfSiteId ver 0.1 (
    phraseId ID
) 
RETURNS CHAR(200) {
    VAR phrase CHAR(200) = (SELECT a.name 
        FROM $Phrase as a 
            JOIN SitePhrase as b ON b.phrase=a.id AND b.site=$site 
        WHERE b.id=phraseId
    );
    return phrase;
};

FUNC PhraseId ver 0.1 (
    phrase CHAR(100)
) 
RETURNS ID {
    VAR phraseId ID;
    SET phraseId = (SELECT id FROM $phrase WHERE name=phrase);
    return phraseId;
};

FUNC PhraseOfId ver 0.1 (
    phraseId ID
) 
RETURNS CHAR(200) {
    VAR phrase CHAR(200) = (SELECT a.name 
        FROM $Phrase as a 
        WHERE a.id=phraseId
    );
    return phrase;
};

FUNC SheetPhrase (
    sheetId ID,
)
RETURNS CHAR(200) {
    VAR phrase CHAR(200) = (SELECT c.name 
        FROM Sheet as a
            JOIN SitePhrase as b ON b.id=a.base
            JOIN $Phrase as c ON c.id=b.phrase
        WHERE a.id=sheetId
    );
    return phrase;
};

FUNC AtomPhrase (
    atomId ID,
)
RETURNS CHAR(200) {
    VAR phrase CHAR(200) = (SELECT c.name 
        FROM Atom as a
            JOIN SitePhrase as b ON b.id=a.base
            JOIN $Phrase as c ON c.id=b.phrase
        WHERE a.id=atomId
    );
    return phrase;
};

FUNC Me()
RETURNS ID {
    VAR me ID = ID(UserSite New KEY user=$user, site=$site);
    return me; -- $user site
};

