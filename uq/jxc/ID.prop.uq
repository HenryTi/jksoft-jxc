-- 实现IX排序和分组
IDX Seq (
    id,
    seq TEXT,               -- id序列，tab分隔，ln分行。排序和分组
);

IX *IxBud (
    i,
    x,
);

IX IxBudValue (
    i,
    x,
    int INT,
    dec DEC(20,6),
    str CHAR(100),
);

-- 从id基于phrase分裂生长的id。比如特定权限id。仅限经理可以见的客户。ID(unit@permit.经理)/contact
-- IxBud可以表达权限。i=id的权限bud，
ID Bud (
    id,
    KEY base ID,            -- 任何的id，包含site
    KEY phrase ID,          -- 任意定义的phrase，无site
);
/*
ID UserSite (
    id,
    KEY user ID,
    KEY site ID,
    INDEX site(site, user) UNIQUE,
);

ID SitePhrase (
    id,
    KEY site ID,            --- site
    KEY phrase ID,          --- phrase id
);
*/
IX IxMy ver 0.1 (
    i,                     -- UserSite
    x INDEX,
);
/*
IDX Balance (
    id,
    value VALUE,
    init Value,
);

ID Subject (
    id,
    key base ID,
    key obj ID,
);
*/
ID History (
    id MINUTE,
    subject ID,         -- 科目 bud@(id, phrase)
    value Value,
    ref ID,             -- 相关凭证
    INDEX subject_id(subject, id) UNIQUE,
);

ID Formula (
    id,
    KEY from ID,            -- from subject
    KEY tiePhrase ID,
    KEY to ID,              -- to subject
    radio VALUE,            -- 换算率
);

FUNC SitePhraseId ver 0.1 (
    phrase CHAR(100)
) 
RETURNS ID {
    VAR phraseId ID;
    SET phraseId = (SELECT id FROM $phrase WHERE name=phrase);
    VAR siteBud ID = ID(Bud New KEY base=$site, phrase=phraseId);
    return siteBud;
};

FUNC PhraseOfSiteId ver 0.1 (
    phraseId ID
) 
RETURNS CHAR(200) {
    VAR phrase CHAR(200) = (SELECT a.name 
        FROM $Phrase as a 
            JOIN Bud as b ON b.phrase=a.id AND b.base=$site 
        WHERE b.id=phraseId
    );
    return phrase;
};

FUNC SheetPhrase (
    sheetId ID,
)
RETURNS CHAR(200) {
    VAR phrase CHAR(200) = (SELECT c.name 
        FROM Sheet as a
            JOIN Bud as b ON b.id=a.base
            JOIN $Phrase as c ON c.id=b.phrase
        WHERE a.id=sheetId
    );
    return phrase;
};

FUNC AtomPhrase (
    atomId ID,
)
RETURNS CHAR(200) {
    VAR phrase CHAR(200) = (SELECT c.name 
        FROM Atom as a
            JOIN Bud as b ON b.id=a.base
            JOIN $Phrase as c ON c.id=b.phrase
        WHERE a.id=atomId
    );
    return phrase;
};

FUNC Me()
RETURNS ID {
    VAR me ID = ID($UserSite New KEY user=$user, site=$site);
    return me;          -- $user site
};
