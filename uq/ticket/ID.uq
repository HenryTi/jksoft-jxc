CONST ItemType = {
    Product: 'product',
    Contact: 'contact',
};

-- independant, searchable
ID Item (
    id,
    KEY base ID,            -- eg, unit type join id
    KEY no,
    ex CHAR(200),
);

CONST SheetType ver 0.2 = {
    Purchase: 'Purchase',
    Sale: 'Sale',
    StoreIn: 'storein',
    StoreOut: 'storeout',
};
ID Sheet (
    id MINUTE,
    KEY base ID,
    KEY no,
    item ID,
    operator ID,            -- employee Item
    value VALUE,
    v1 VALUE,
    v2 VALUE,
    v3 VALUE,
);

-- dependant
ID Bind (
    id MINUTE,
    KEY base ID,            -- (main + type) => owner, or type in main
    KEY item ID,            -- item id easy to load values
    ex CHAR(50),            -- should be ascii，tab values
);

const FlowState = {
    Start: '$start',
    Ready: 'ready',
};

IX IxFlow ver 0.1 (
    ix,                     -- ID(unit, prop('ixflow'), prop('$start'), $user)
    xi Sheet INDEX,         -- sheet
);

-- 所有单据的明细，单值
ID Detail (
    id MINUTE,
    base ID,               -- SheetPurchase or SheetSale
    item ID,                -- 商品不同包装或者批次，甚至不同的人或者单位, 也可以指向源单明细
    value VALUE,
    v1 VALUE,
    v2 VALUE,
    v3 VALUE,
    INDEX base_id(base, id) UNIQUE,
);

ENUM MeasureUnitType (
    count = 1,              -- 个数
    length = 2,             -- 长度
    area = 3,               -- 面积
    volume = 4,             -- 体积
    weight = 5,             -- 重量
    time = 6,               -- 时间
);
-- 大量可以预先定义
ID MeasureUnitName (
    id,
    KEY name CHAR(50),
    alias CHAR(50),
    type ENUM MeasureUnitType,
);
ID MeasureUnit (
    id,
    KEY unitBase ID MeasureUnit,
    KEY quantity DEC(9,4) DEFAULT 1,
    unitName ID MeasureUnitName,
    type ENUM MeasureUnitType DEFAULT MeasureUnitType.count,
);

ID UnitItem (
    id,
    KEY item ID,            -- product or batch, or else
    key unit ID,            -- measureUnitName or measureUnit, or else
);
